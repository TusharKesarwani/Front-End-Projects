//================================================================================
// [pg-calendar]
// version: 1.4.30
// update: 2018.07.30
//================================================================================

!(function (e, n) {
  if (
    (void 0 === e && void 0 !== window && (e = window),
    "function" == typeof define && define.amd)
  )
    define(["jquery", "moment"], function (e, t) {
      return n(e, t);
    });
  else if ("object" == typeof module && module.exports) {
    var t = n(require("jquery"), require("moment"));
    module.exports = t;
  } else n(e.jquery, e.moment);
})(this, function (e, n) {
  var t, s, u;
  !(function (f) {
    var r,
      o,
      m,
      p,
      v = {},
      h = {},
      b = {},
      y = {},
      n = Object.prototype.hasOwnProperty,
      a = [].slice,
      k = /\.js$/;
    function C(e, t) {
      return n.call(e, t);
    }
    function i(e, t) {
      var n,
        a,
        s,
        r,
        o,
        i,
        l,
        u,
        g,
        c,
        d,
        f = t && t.split("/"),
        m = b.map,
        p = (m && m["*"]) || {};
      if (e) {
        for (
          o = (e = e.split("/")).length - 1,
            b.nodeIdCompat && k.test(e[o]) && (e[o] = e[o].replace(k, "")),
            "." === e[0].charAt(0) &&
              f &&
              (e = f.slice(0, f.length - 1).concat(e)),
            g = 0;
          g < e.length;
          g++
        )
          if ("." === (d = e[g])) e.splice(g, 1), (g -= 1);
          else if (".." === d) {
            if (0 === g || (1 === g && ".." === e[2]) || ".." === e[g - 1])
              continue;
            0 < g && (e.splice(g - 1, 2), (g -= 2));
          }
        e = e.join("/");
      }
      if ((f || p) && m) {
        for (g = (n = e.split("/")).length; 0 < g; g -= 1) {
          if (((a = n.slice(0, g).join("/")), f))
            for (c = f.length; 0 < c; c -= 1)
              if ((s = m[f.slice(0, c).join("/")]) && (s = s[a])) {
                (r = s), (i = g);
                break;
              }
          if (r) break;
          !l && p && p[a] && ((l = p[a]), (u = g));
        }
        !r && l && ((r = l), (i = u)),
          r && (n.splice(0, i, r), (e = n.join("/")));
      }
      return e;
    }
    function M(t, n) {
      return function () {
        var e = a.call(arguments, 0);
        return (
          "string" != typeof e[0] && 1 === e.length && e.push(null),
          o.apply(f, e.concat([t, n]))
        );
      };
    }
    function w(t) {
      return function (e) {
        v[t] = e;
      };
    }
    function D(e) {
      if (C(h, e)) {
        var t = h[e];
        delete h[e], (y[e] = !0), r.apply(f, t);
      }
      if (!C(v, e) && !C(y, e)) throw new Error("No " + e);
      return v[e];
    }
    function l(e) {
      var t,
        n = e ? e.indexOf("!") : -1;
      return (
        -1 < n && ((t = e.substring(0, n)), (e = e.substring(n + 1, e.length))),
        [t, e]
      );
    }
    function S(e) {
      return e ? l(e) : [];
    }
    (m = function (e, t) {
      var n,
        a,
        s = l(e),
        r = s[0],
        o = t[1];
      return (
        (e = s[1]),
        r && (n = D((r = i(r, o)))),
        r
          ? (e =
              n && n.normalize
                ? n.normalize(
                    e,
                    ((a = o),
                    function (e) {
                      return i(e, a);
                    })
                  )
                : i(e, o))
          : ((r = (s = l((e = i(e, o))))[0]), (e = s[1]), r && (n = D(r))),
        { f: r ? r + "!" + e : e, n: e, pr: r, p: n }
      );
    }),
      (p = {
        require: function (e) {
          return M(e);
        },
        exports: function (e) {
          var t = v[e];
          return void 0 !== t ? t : (v[e] = {});
        },
        module: function (e) {
          return {
            id: e,
            uri: "",
            exports: v[e],
            config:
              ((t = e),
              function () {
                return (b && b.config && b.config[t]) || {};
              }),
          };
          var t;
        },
      }),
      (r = function (e, t, n, a) {
        var s,
          r,
          o,
          i,
          l,
          u,
          g,
          c = [],
          d = typeof n;
        if (((u = S((a = a || e))), "undefined" === d || "function" === d)) {
          for (
            t = !t.length && n.length ? ["require", "exports", "module"] : t,
              l = 0;
            l < t.length;
            l += 1
          )
            if ("require" === (r = (i = m(t[l], u)).f)) c[l] = p.require(e);
            else if ("exports" === r) (c[l] = p.exports(e)), (g = !0);
            else if ("module" === r) s = c[l] = p.module(e);
            else if (C(v, r) || C(h, r) || C(y, r)) c[l] = D(r);
            else {
              if (!i.p) throw new Error(e + " missing " + r);
              i.p.load(i.n, M(a, !0), w(r), {}), (c[l] = v[r]);
            }
          (o = n ? n.apply(v[e], c) : void 0),
            e &&
              (s && s.exports !== f && s.exports !== v[e]
                ? (v[e] = s.exports)
                : (o === f && g) || (v[e] = o));
        } else e && (v[e] = n);
      }),
      (t =
        s =
        o =
          function (e, t, n, a, s) {
            if ("string" == typeof e) return p[e] ? p[e](t) : D(m(e, S(t)).f);
            if (!e.splice) {
              if (((b = e).deps && o(b.deps, b.callback), !t)) return;
              t.splice ? ((e = t), (t = n), (n = null)) : (e = f);
            }
            return (
              (t = t || function () {}),
              "function" == typeof n && ((n = a), (a = s)),
              a
                ? r(f, e, t, n)
                : setTimeout(function () {
                    r(f, e, t, n);
                  }, 4),
              o
            );
          }),
      (o.config = function (e) {
        return o(e);
      }),
      (t._defined = v),
      ((u = function (e, t, n) {
        if ("string" != typeof e)
          throw new Error(
            "See almond README: incorrect module build, no module name"
          );
        t.splice || ((n = t), (t = [])),
          C(v, e) || C(h, e) || (h[e] = [e, t, n]);
      }).amd = { jQuery: !0 });
  })(),
    u("almond", function () {}),
    u("component/models", [], function () {
      return {
        name: "pignoseCalendar",
        version: "1.4.30",
        preference: { supports: { themes: ["light", "dark", "blue"] } },
      };
    }),
    u("component/helper", ["./models"], function (u) {
      var o = {},
        g = {},
        n = {},
        c = /[A-Z]/,
        a = function () {};
      return (
        (a.format = function (e) {
          if (e) {
            var t = Array.prototype.slice.call(arguments, 1),
              n = e + t.join(".");
            if (o[n]) return o[n];
            for (var a = t.length, s = 0; s < a; s++) {
              var r = t[s];
              e = e.replace(
                new RegExp("((?!\\\\)?\\{" + s + "(?!\\\\)?\\})", "g"),
                r
              );
            }
            return (
              (e = e.replace(new RegExp("\\\\{([0-9]+)\\\\}", "g"), "{$1}")),
              (o[n] = e)
            );
          }
          return "";
        }),
        (a.getClass = function (e) {
          var t = [u.name, e].join(".");
          if (g[t]) return g[t];
          for (
            var n = e.split(""), a = [], s = n.length, r = 0, o = 0;
            r < s;
            r++
          ) {
            var i = n[r];
            !0 === c.test(i) &&
              ((a[o++] = "-"), (i = i.toString().toLowerCase())),
              (a[o++] = i);
          }
          var l = a.join("");
          return (g[t] = l);
        }),
        (a.getSubClass = function (e) {
          if (e && e.length) {
            var t = e.split("");
            (t[0] = t[0].toUpperCase()), (e = t.join(""));
          }
          return (
            n[e] || (n[e] = a.getClass(a.format("{0}{1}", u.name, e))), n[e]
          );
        }),
        a
      );
    }),
    u("shim/utils", [], function () {
      return {
        register: function (e, t, n) {
          if (!n) {
            var a =
              "PIGNOSE Calendar needs " +
              e +
              " library.\nIf you want to use built-in plugin, Import dist/pignose.calendar.full.js.\nType below code in your command line to install the library.";
            console &&
              "function" == typeof console.error &&
              (console.warn(a), console.warn("$ " + t));
          }
          return n;
        },
      };
    }),
    u("moment", ["./shim/utils"], function (e) {
      var t = void 0;
      try {
        t = n;
      } catch (e) {}
      return e.register("moment", "npm install moment --save", t);
    }),
    u("manager/index", ["../component/helper", "moment"], function (s, r) {
      var o = {},
        e = function (e) {
          if (!e) throw new Error("first parameter `date` must be gave");
          if (e instanceof r == !1) {
            if ("string" != typeof e && "number" != typeof e)
              throw new Error(
                "`date` option is invalid type. (date: " + e + ")."
              );
            e = r(e);
          }
          (this.year = parseInt(e.format("YYYY"), 10)),
            (this.month = parseInt(e.format("MM"), 10)),
            (this.prevMonth = parseInt(
              e.clone().add(-1, "months").format("MM"),
              10
            )),
            (this.nextMonth = parseInt(
              e.clone().add(1, "months").format("MM"),
              10
            )),
            (this.day = parseInt(e.format("DD"), 10)),
            (this.firstDay = 1),
            (this.lastDay = parseInt(
              e.clone().endOf("month").format("DD"),
              10
            )),
            (this.weekDay = e.weekday()),
            (this.date = e);
        };
      return (
        (e.prototype.toString = function () {
          return this.date.format("YYYY-MM-DD");
        }),
        (e.Convert = function (e, t, n) {
          var a = s.format("{0}-{1}-{2}", e, t, n);
          return o[a] || (o[a] = r(a, "YYYY-MM-DD")), o[a];
        }),
        e
      );
    }),
    u("component/classNames", ["../component/helper"], function (e) {
      return {
        top: e.getSubClass("top"),
        header: e.getSubClass("header"),
        body: e.getSubClass("body"),
        button: e.getSubClass("button"),
      };
    }),
    u("configures/i18n", [], function () {
      return {
        defaultLanguage: "en",
        supports: [
          "en",
          "ko",
          "fr",
          "ch",
          "de",
          "nl",
          "jp",
          "pt",
          "da",
          "pl",
          "es",
          "cs",
          "uk",
          "ru",
          "ka",
        ],
        weeks: {
          en: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          ko: ["일", "월", "화", "수", "목", "금", "토"],
          fa: ["شنبه", "آدینه", "پنج", "چهار", "سه", "دو", "یک"],
          fr: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"],
          ch: ["日", "一", "二", "三", "四", "五", "六"],
          de: ["SO", "MO", "DI", "MI", "DO", "FR", "SA"],
          nl: ["Zo", "Ma", "Di", "Wo", "Do", "Vr", "Za"],
          jp: ["日", "月", "火", "水", "木", "金", "土"],
          pt: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"],
          da: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"],
          pl: ["Nie", "Pon", "Wto", "Śro", "Czw", "Pią", "Sob"],
          es: ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"],
          it: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"],
          cs: ["Ne", "Po", "Út", "St", "Čt", "Pá", "So"],
          uk: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
          ru: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
          ka: ["კვ", "ორ", "სმ", "ოთ", "ხთ", "პრ", "შბ"],
        },
        monthsLong: {
          en: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "Jun",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
          ko: [
            "1월",
            "2월",
            "3월",
            "4월",
            "5월",
            "6월",
            "7월",
            "8월",
            "9월",
            "10월",
            "11월",
            "12월",
          ],
          fa: [
            "آذر",
            "آبان",
            "مهر",
            "شهریور",
            "مرداد",
            "تیر",
            "خرداد",
            "اردیبهشت",
            "فروردین",
            "اسفند",
            "بهمن",
            "دی",
          ],
          fr: [
            "Janvier",
            "Février",
            "Mars",
            "Avril",
            "Mai",
            "Juin",
            "Juillet",
            "Août",
            "Septembre",
            "Octobre",
            "Novembre",
            "Décembre",
          ],
          ch: [
            "一月",
            "二月",
            "三月",
            "四月",
            "五月",
            "六月",
            "七月",
            "八月",
            "九月",
            "十月",
            "十一月",
            "十二月",
          ],
          de: [
            "Januar",
            "Februar",
            "März",
            "April",
            "Mai",
            "Juni",
            "Juli",
            "August",
            "September",
            "Oktober",
            "November",
            "Dezember",
          ],
          nl: [
            "Januari",
            "Februari",
            "Maart",
            "April",
            "Mei",
            "Juni",
            "Juli",
            "Augustus",
            "September",
            "Oktober",
            "November",
            "December",
          ],
          jp: [
            "一月",
            "二月",
            "三月",
            "四月",
            "五月",
            "六月",
            "七月",
            "八月",
            "九月",
            "十月",
            "十一月",
            "十二月",
          ],
          pt: [
            "Janeiro",
            "Fevereiro",
            "Março",
            "Abril",
            "Maio",
            "Junho",
            "Julho",
            "Agosto",
            "Setembro",
            "Outubro",
            "Novembro",
            "Dezembro",
          ],
          da: [
            "Januar",
            "Februar",
            "Marts",
            "April",
            "Maj",
            "Juni",
            "Juli",
            "August",
            "September",
            "Oktober",
            "November",
            "December",
          ],
          pl: [
            "Styczeń",
            "Luty",
            "Marzec",
            "Kwiecień",
            "Maj",
            "Czerwiec",
            "Lipiec",
            "Sierpień",
            "Wrzesień",
            "Październik",
            "Listopad",
            "Grudzień",
          ],
          es: [
            "Enero",
            "Febrero",
            "Marzo",
            "Abril",
            "Mayo",
            "Junio",
            "Julio",
            "Agosto",
            "Septiembre",
            "Octubre",
            "Noviembre",
            "Diciembre",
          ],
          it: [
            "Gennaio",
            "Febbraio",
            "Marzo",
            "Aprile",
            "Maggio",
            "Giugno",
            "Luglio",
            "Agosto",
            "Settembre",
            "Ottobre",
            "Novembre",
            "Dicembre",
          ],
          cs: [
            "Leden",
            "Únor",
            "Březen",
            "Duben",
            "Květen",
            "Červen",
            "Cervenec",
            "Srpen",
            "Září",
            "Říjen",
            "Listopad",
            "Prosinec",
          ],
          uk: [
            "Січень",
            "Лютий",
            "Березень",
            "Квітень",
            "Травень",
            "Червень",
            "Липень",
            "Серпень",
            "Вересень",
            "Жовтень",
            "Листопад",
            "Грудень",
          ],
          ru: [
            "Январь",
            "Февраль",
            "Март",
            "Апрель",
            "Май",
            "Июнь",
            "Июль",
            "Август",
            "Сентябрь",
            "Октябрь",
            "Ноябрь",
            "Декабрь",
          ],
          ka: [
            "იანვარი",
            "თებერვალი",
            "მარტი",
            "აპრილი",
            "მაისი",
            "ივნისი",
            "ივლისი",
            "აგვისტო",
            "სექტემბერი",
            "ოქტომბერი",
            "ნოემბერი",
            "დეკემბერი",
          ],
        },
        months: {
          en: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          ko: [
            "1월",
            "2월",
            "3월",
            "4월",
            "5월",
            "6월",
            "7월",
            "8월",
            "9월",
            "10월",
            "11월",
            "12월",
          ],
          fa: [
            "آذر",
            "آبان",
            "مهر",
            "شهریور",
            "مرداد",
            "تیر",
            "خرداد",
            "اردیبهشت",
            "فروردین",
            "اسفند",
            "بهمن",
            "دی",
          ],
          fr: [
            "Jan",
            "Fév",
            "Mar",
            "Avr",
            "Mai",
            "Juin",
            "Juil",
            "Aoû",
            "Sep",
            "Oct",
            "Nov",
            "Déc",
          ],
          ch: [
            "一月",
            "二月",
            "三月",
            "四月",
            "五月",
            "六月",
            "七月",
            "八月",
            "九月",
            "十月",
            "十一月",
            "十二月",
          ],
          de: [
            "Jan",
            "Feb",
            "Mär",
            "Apr",
            "Mai",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Okt",
            "Nov",
            "Dez",
          ],
          nl: [
            "Jan",
            "Feb",
            "Mrt",
            "Apr",
            "Mei",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Okt",
            "Nov",
            "Dec",
          ],
          jp: [
            "一月",
            "二月",
            "三月",
            "四月",
            "五月",
            "六月",
            "七月",
            "八月",
            "九月",
            "十月",
            "十一月",
            "十二月",
          ],
          pt: [
            "Jan",
            "Fev",
            "Mar",
            "Abr",
            "Mai",
            "Jun",
            "Jul",
            "Ago",
            "Set",
            "Out",
            "Nov",
            "Dez",
          ],
          da: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "Maj",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Okt",
            "Nov",
            "Dec",
          ],
          pl: [
            "Sty",
            "Lut",
            "Mar",
            "Kwi",
            "Maj",
            "Cze",
            "Lip",
            "Sie",
            "Wrz",
            "Paź",
            "Lis",
            "Gru",
          ],
          es: [
            "Ene",
            "Feb",
            "Mar",
            "Abr",
            "May",
            "Jun",
            "Jul",
            "Ago",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          it: [
            "Gen",
            "Feb",
            "Mar",
            "Apr",
            "Mag",
            "Giu",
            "Lug",
            "Ago",
            "Set",
            "Ott",
            "Nov",
            "Dic",
          ],
          cs: [
            "Led",
            "Úno",
            "Bře",
            "Dub",
            "Kvě",
            "Čvn",
            "Čvc",
            "Srp",
            "Zář",
            "Říj",
            "Lis",
            "Pro",
          ],
          uk: [
            "Січ",
            "Лют",
            "Бер",
            "Квіт",
            "Трав",
            "Черв",
            "Лип",
            "Серп",
            "Вер",
            "Жовт",
            "Лист",
            "Груд",
          ],
          ru: [
            "Янв",
            "Февр",
            "Март",
            "Апр",
            "Май",
            "Июнь",
            "Июль",
            "Авг",
            "Сент",
            "Окт",
            "Нояб",
            "Дек",
          ],
          ka: [
            "იან",
            "თებ",
            "მარ",
            "აპრ",
            "მაი",
            "ივნ",
            "ივლ",
            "აგვ",
            "სექ",
            "ოქტ",
            "ნოე",
            "დეკ",
          ],
        },
        controls: {
          en: { ok: "OK", cancel: "Cancel" },
          ko: { ok: "확인", cancel: "취소" },
          fa: { ok: "چک کنید", cancel: "لغو" },
          fr: { ok: "Vérifier", cancel: "Annuler" },
          ch: { ok: "确认", cancel: "取消" },
          de: { ok: "Okay", cancel: "Abbrechen" },
          nl: { ok: "Oké", cancel: "Annuleren" },
          jp: { ok: "確認", cancel: "キャンセル" },
          pt: { ok: "Verifique", cancel: "Cancelar" },
          da: { ok: "Bekræftelse", cancel: "aflyst" },
          pl: { ok: "Sprawdź", cancel: "Anuluj" },
          es: { ok: "Cheque", cancel: "Cancelar" },
          it: { ok: "conferma", cancel: "annullato" },
          cs: { ok: "Zkontrolujte", cancel: "Zrušit" },
          uk: { ok: "Вибрати", cancel: "Скасувати" },
          ru: { ok: "Выбрать", cancel: "Отмена" },
          ka: { ok: "არჩევა", cancel: "გაუქმება" },
        },
      };
    }),
    u("component/global", ["../configures/i18n"], function (e) {
      return {
        language: e.defaultLanguage,
        languages: e,
        week: 0,
        format: "YYYY-MM-DD",
      };
    }),
    u("component/options", ["moment", "./global"], function (e, t) {
      return {
        lang: null,
        languages: t.languages,
        theme: "light",
        date: e(),
        format: t.format,
        enabledDates: [],
        disabledDates: [],
        disabledWeekdays: [],
        disabledRanges: [],
        schedules: [],
        scheduleOptions: { colors: {} },
        week: t.week,
        weeks: t.languages.weeks.en,
        monthsLong: t.languages.monthsLong.en,
        months: t.languages.months.en,
        controls: t.languages.controls.en,
        pickWeeks: !1,
        initialize: !0,
        multiple: !1,
        toggle: !1,
        reverse: !1,
        buttons: !1,
        modal: !1,
        selectOver: !1,
        minDate: null,
        maxDate: null,
        init: null,
        select: null,
        apply: null,
        click: null,
        page: null,
        prev: null,
        next: null,
      };
    }),
    u("jquery", ["./shim/utils"], function (e) {
      var t = void 0;
      try {
        t = jQuery || o;
      } catch (e) {}
      return e.register("jquery", "npm install jquery --save", t);
    }),
    u(
      "methods/configure",
      [
        "../component/global",
        "../component/models",
        "../component/options",
        "../configures/i18n",
        "jquery",
      ],
      function (n, a, s, r, o) {
        return function (e) {
          var t = this;
          (t.settings = o.extend(!0, {}, s, e)),
            t.settings.lang || (t.settings.lang = n.language),
            t.settings.lang !== r.defaultLanguage &&
              -1 !== o.inArray(t.settings.lang, n.languages.supports) &&
              ((t.settings.weeks =
                n.languages.weeks[t.settings.lang] ||
                n.languages.weeks[r.defaultLanguage]),
              (t.settings.monthsLong =
                n.languages.monthsLong[t.settings.lang] ||
                n.languages.monthsLong[r.defaultLanguage]),
              (t.settings.months =
                n.languages.months[t.settings.lang] ||
                n.languages.months[r.defaultLanguage]),
              (t.settings.controls =
                n.languages.controls[t.settings.lang] ||
                n.languages.controls[r.defaultLanguage])),
            "light" !== t.settings.theme &&
              -1 ===
                o.inArray(t.settings.theme, a.preference.supports.themes) &&
              (t.settings.theme = "light"),
            !0 === t.settings.pickWeeks &&
              (!1 === t.settings.multiple
                ? console.error(
                    "You must give true at settings.multiple options on PIGNOSE-Calendar for using in pickWeeks option."
                  )
                : !0 === t.settings.toggle &&
                  console.error(
                    "You must give false at settings.toggle options on PIGNOSE-Calendar for using in pickWeeks option."
                  )),
            (t.settings.week %= t.settings.weeks.length);
        };
      }
    );
  var H =
    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            "function" == typeof Symbol &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        };
  u(
    "methods/init",
    [
      "../manager/index",
      "../component/classNames",
      "../component/helper",
      "../component/models",
      "../component/global",
      "./configure",
      "jquery",
      "moment",
    ],
    function (W, z, N, q, F, t, P, T) {
      var r = P(window);
      P(document);
      return function (e) {
        var D = this;
        (D.settings = {}),
          t.call(D, e),
          (D.global = {
            calendarHtml: N.format(
              '<div class="{0} {0}-{4}">                                    <div class="{1}">                                      <a href="#" class="{1}-nav {1}-prev">                                          <span class="icon-arrow-left {1}-icon"></span>                                      </a>                                      <div class="{1}-date">                                          <span class="{1}-month"></span>                                          <span class="{1}-year"></span>                                      </div>                                      <a href="#" class="{1}-nav {1}-next">                                          <span class="icon-arrow-right {1}-icon"></span>                                      </a>                                    </div>                                    <div class="{2}"></div>                                    <div class="{3}"></div>                                  </div>',
              N.getClass(q.name),
              z.top,
              z.header,
              z.body,
              D.settings.theme
            ),
            calendarButtonsHtml: N.format(
              '<div class="{0}-group">                                            <a href="#" class="{0} {0}-cancel">{1}</a>                                            <a href="#" class="{0} {0}-apply">{2}</a>                                          </div>',
              z.button,
              D.settings.controls.cancel,
              D.settings.controls.ok
            ),
            calendarScheduleContainerHtml: N.format(
              '<div class="{0}-schedule-container"></div>',
              z.button
            ),
            calendarSchedulePinHtml: N.format(
              '<span class="{0}-schedule-pin {0}-schedule-pin-\\{0\\}" style="background-color: \\{1\\};"></span>',
              z.button
            ),
          });
        var S = N.getSubClass("unitRange"),
          Y = N.getSubClass("unitRangeFirst"),
          A = N.getSubClass("unitRangeLast"),
          O = N.getSubClass("unitActive"),
          j = [
            N.getSubClass("unitFirstActive"),
            N.getSubClass("unitSecondActive"),
          ],
          L = N.getSubClass("unitToggleActive"),
          x = N.getSubClass("unitToggleInactive"),
          J = null;
        return D.each(function () {
          var y = P(this),
            k = {
              initialize: null,
              element: y,
              calendar: P(D.global.calendarHtml),
              input: y.is("input"),
              renderer: null,
              current: [null, null],
              date: { all: [], enabled: [], disabled: [] },
              storage: { activeDates: [], schedules: [] },
              dateManager: new W(D.settings.date),
              calendarWrapperHtml: N.format(
                '<div class="{0}"></div>',
                N.getSubClass("wrapper")
              ),
              calendarWrapperOverlayHtml: N.format(
                '<div class="{0}"></div>',
                N.getSubClass("wrapperOverlay")
              ),
              context: D,
            },
            C = y;
          !0 === D.settings.initialize &&
            (k.initialize = k.current[0] = k.dateManager.date.clone()),
            (this.local = k),
            !0 === D.settings.reverse
              ? k.calendar.addClass(N.getSubClass("reverse"))
              : k.calendar.addClass(N.getSubClass("default"));
          for (
            var e = D.settings.week;
            e < D.settings.weeks.length + D.settings.week;
            e++
          ) {
            e < 0 && (e = F.languages.weeks.en.length - e);
            var t = D.settings.weeks[e % D.settings.weeks.length];
            if ("string" == typeof t)
              (t = t.toUpperCase()),
                P(
                  N.format(
                    '<div class="{0} {0}-{2}">{1}</div>',
                    N.getSubClass("week"),
                    t,
                    F.languages.weeks.en[
                      e % F.languages.weeks.en.length
                    ].toLowerCase()
                  )
                ).appendTo(k.calendar.find("." + z.header));
          }
          if (
            (!0 === D.settings.buttons &&
              (J = P(D.global.calendarButtonsHtml)).appendTo(k.calendar),
            !0 === k.input || !0 === D.settings.modal)
          ) {
            var n = N.getSubClass("wrapperActive"),
              a = N.getSubClass("wrapperOverlayActive"),
              s = void 0;
            (C = P(k.calendarWrapperHtml)).bind("click", function (e) {
              e.stopPropagation();
            }),
              y
                .bind("click", function (e) {
                  e.preventDefault(),
                    e.stopPropagation(),
                    e.stopImmediatePropagation(),
                    (s = P("." + N.getSubClass("wrapperOverlay"))).length < 1 &&
                      (s = P(k.calendarWrapperOverlayHtml)).appendTo("body"),
                    s
                      .unbind("click." + N.getClass(q.name))
                      .bind("click." + N.getClass(q.name), function (e) {
                        e.stopPropagation(),
                          C.trigger("cancel." + N.getClass(q.name));
                      }),
                    !1 === C.parent().is("body") && C.appendTo("body"),
                    C.show(),
                    s.show(),
                    r
                      .unbind("resize." + N.getClass(q.name))
                      .bind("resize." + N.getClass(q.name), function () {
                        C.css({
                          marginLeft: -C.outerWidth() / 2,
                          marginTop: -C.outerHeight() / 2,
                        });
                      })
                      .triggerHandler("resize." + N.getClass(q.name)),
                    y[q.name]("set", y.val()),
                    setTimeout(function () {
                      s.addClass(a), C.addClass(n);
                    }, 25);
                })
                .bind("focus", function (e) {
                  P(this).blur();
                }),
              C.unbind(
                "cancel." + N.getClass(q.name) + " apply." + N.getClass(q.name)
              ).bind(
                "cancel." + N.getClass(q.name) + " apply." + N.getClass(q.name),
                function () {
                  s.removeClass(a).hide(), C.removeClass(n).hide();
                }
              );
          }
          var M = function () {
              if (!k.current[0] || !k.current[1]) return !1;
              var e = k.current[0].format("YYYY-MM-DD"),
                t = k.current[1].format("YYYY-MM-DD"),
                n = T(
                  Math.max(
                    k.current[0].valueOf(),
                    k.dateManager.date.clone().startOf("month").valueOf()
                  )
                ),
                a = T(
                  Math.min(
                    k.current[1].valueOf(),
                    k.dateManager.date.clone().endOf("month").valueOf()
                  )
                ),
                s = n.format("YYYY-MM-DD") !== e,
                r = a.format("YYYY-MM-DD") !== t;
              !1 === s && n.add(1, "days"), !1 === r && a.add(-1, "days");
              for (
                var o = n.format("YYYY-MM-DD"), i = a.format("YYYY-MM-DD");
                n.format("YYYY-MM-DD") <= a.format("YYYY-MM-DD");
                n.add(1, "days")
              ) {
                var l = n.format("YYYY-MM-DD"),
                  u = k.calendar
                    .find(
                      N.format(
                        '.{0}[data-date="{1}"]',
                        N.getSubClass("unit"),
                        l
                      )
                    )
                    .addClass(S);
                l === o && u.addClass(Y), l === i && u.addClass(A);
              }
            },
            w = function (e, t, n) {
              return !!n && e.diff(n) < 0 && 0 < t.diff(n);
            };
          (k.renderer = function () {
            if (
              (k.calendar.appendTo(C.empty()),
              k.calendar.find("." + z.top + "-year").text(k.dateManager.year),
              k.calendar
                .find("." + z.top + "-month")
                .text(D.settings.monthsLong[k.dateManager.month - 1]),
              k.calendar
                .find(N.format(".{0}-prev .{0}-value", z.top))
                .text(
                  D.settings.months[k.dateManager.prevMonth - 1].toUpperCase()
                ),
              k.calendar
                .find(N.format(".{0}-next .{0}-value", z.top))
                .text(
                  D.settings.months[k.dateManager.nextMonth - 1].toUpperCase()
                ),
              !0 === D.settings.buttons && J)
            ) {
              var s = y;
              J.find("." + z.button).bind("click", function (e) {
                e.preventDefault(), e.stopPropagation();
                var t = P(this);
                if (t.hasClass(z.button + "-apply")) {
                  t.trigger("apply." + q.name, k);
                  var n = "";
                  if (!0 === D.settings.toggle)
                    n = k.storage.activeDates.join(", ");
                  else if (!0 === D.settings.multiple) {
                    var a = [];
                    null !== k.current[0] &&
                      a.push(k.current[0].format(D.settings.format)),
                      null !== k.current[1] &&
                        a.push(k.current[1].format(D.settings.format)),
                      (n = a.join(" ~ "));
                  } else
                    n =
                      null === k.current[0]
                        ? ""
                        : T(k.current[0]).format(D.settings.format);
                  !0 === k.input && s.val(n).triggerHandler("change"),
                    "function" == typeof D.settings.apply &&
                      D.settings.apply.call(k.calendar, k.current, k),
                    C.triggerHandler("apply." + N.getClass(q.name));
                } else C.triggerHandler("cancel." + N.getClass(q.name));
              });
            }
            var e = k.calendar.find("." + z.body).empty(),
              t = W.Convert(
                k.dateManager.year,
                k.dateManager.month,
                k.dateManager.firstDay
              ),
              n = W.Convert(
                k.dateManager.year,
                k.dateManager.month,
                k.dateManager.lastDay
              ),
              a = t.weekday() - D.settings.week,
              r = n.weekday() - D.settings.week;
            a < 0 && (a += D.settings.weeks.length);
            for (
              var g = [],
                c = [
                  null === k.current[0]
                    ? null
                    : k.current[0].format("YYYY-MM-DD"),
                  null === k.current[1]
                    ? null
                    : k.current[1].format("YYYY-MM-DD"),
                ],
                d = null === D.settings.minDate ? null : T(D.settings.minDate),
                f = null === D.settings.maxDate ? null : T(D.settings.maxDate),
                o = 0;
              o < a;
              o++
            ) {
              var i = P(
                N.format(
                  '<div class="{0} {0}-{1}"></div>',
                  N.getSubClass("unit"),
                  F.languages.weeks.en[o].toLowerCase()
                )
              );
              g.push(i);
            }
            for (
              var l = function (e) {
                  var t = W.Convert(k.dateManager.year, k.dateManager.month, e),
                    n = t.format("YYYY-MM-DD"),
                    a = P(
                      N.format(
                        '<div class="{0} {0}-date {0}-{3}" data-date="{1}"><a href="#">{2}</a></div>',
                        N.getSubClass("unit"),
                        t.format("YYYY-MM-DD"),
                        e,
                        F.languages.weeks.en[t.weekday()].toLowerCase()
                      )
                    );
                  if (0 < D.settings.enabledDates.length)
                    -1 === P.inArray(n, D.settings.enabledDates) &&
                      a.addClass(N.getSubClass("unitDisabled"));
                  else if (
                    0 < D.settings.disabledWeekdays.length &&
                    -1 !== P.inArray(t.weekday(), D.settings.disabledWeekdays)
                  )
                    a.addClass(N.getSubClass("unitDisabled")).addClass(
                      N.getSubClass("unitDisabledWeekdays")
                    );
                  else if (
                    (null !== d && 0 < d.diff(t)) ||
                    (null !== f && f.diff(t) < 0)
                  )
                    a.addClass(N.getSubClass("unitDisabled")).addClass(
                      N.getSubClass("unitDisabledRange")
                    );
                  else if (-1 !== P.inArray(n, D.settings.disabledDates))
                    a.addClass(N.getSubClass("unitDisabled"));
                  else if (0 < D.settings.disabledRanges.length)
                    for (
                      var s = D.settings.disabledRanges.length, r = 0;
                      r < s;
                      r++
                    ) {
                      var o = D.settings.disabledRanges[r];
                      o.length;
                      if (0 <= t.diff(T(o[0])) && t.diff(T(o[1])) <= 0) {
                        a.addClass(N.getSubClass("unitDisabled"))
                          .addClass(N.getSubClass("unitDisabledRange"))
                          .addClass(N.getSubClass("unitDisabledMultipleRange"));
                        break;
                      }
                    }
                  if (
                    0 < D.settings.schedules.length &&
                    "object" === H(D.settings.scheduleOptions) &&
                    "object" === H(D.settings.scheduleOptions.colors)
                  ) {
                    var i = D.settings.schedules.filter(function (e) {
                        return e.date === n;
                      }),
                      l = P.unique(
                        i
                          .map(function (e, t) {
                            return e.name;
                          })
                          .sort()
                      );
                    if (0 < l.length) {
                      var u = P(D.global.calendarScheduleContainerHtml);
                      u.appendTo(a),
                        l.map(function (e, t) {
                          if (D.settings.scheduleOptions.colors[e]) {
                            var n = D.settings.scheduleOptions.colors[e];
                            P(
                              N.format(D.global.calendarSchedulePinHtml, e, n)
                            ).appendTo(u);
                          }
                        });
                    }
                  }
                  !0 === D.settings.toggle
                    ? -1 !== P.inArray(n, k.storage.activeDates) &&
                      0 < k.storage.activeDates.length
                      ? a.addClass(L)
                      : a.addClass(x)
                    : !1 === a.hasClass(N.getSubClass("unitDisabled")) &&
                      (!0 === D.settings.multiple
                        ? (c[0] && n === c[0] && a.addClass(O).addClass(j[0]),
                          c[1] && n === c[1] && a.addClass(O).addClass(j[1]))
                        : c[0] &&
                          n === c[0] &&
                          -1 === P.inArray(c[0], D.settings.disabledDates) &&
                          (D.settings.enabledDates.length < 1 ||
                            -1 !== P.inArray(c[0], D.settings.enabledDates)) &&
                          a.addClass(O).addClass(j[0])),
                    g.push(a);
                  var p = y;
                  a.bind("click", function (e) {
                    e.preventDefault(), e.stopPropagation();
                    var t = P(this),
                      n = t.data("date"),
                      a = 0,
                      s = !1;
                    if (t.hasClass(N.getSubClass("unitDisabled"))) s = !0;
                    else if (
                      !0 === k.input &&
                      !1 === D.settings.multiple &&
                      !1 === D.settings.buttons
                    )
                      p.val(T(n).format(D.settings.format)),
                        C.triggerHandler("apply." + N.getClass(q.name));
                    else if (
                      null !== k.initialize &&
                      k.initialize.format("YYYY-MM-DD") === n &&
                      !1 === D.settings.toggle
                    );
                    else {
                      if (!0 === D.settings.toggle) {
                        var r = k.storage.activeDates.filter(function (e, t) {
                          return e === n;
                        });
                        if (((k.current[a] = T(n)), r.length < 1))
                          k.storage.activeDates.push(n),
                            t.addClass(L).removeClass(x);
                        else {
                          for (
                            var o = 0, i = 0;
                            i < k.storage.activeDates.length;
                            i++
                          ) {
                            var l = k.storage.activeDates[i];
                            if (n === l) {
                              o = i;
                              break;
                            }
                          }
                          k.storage.activeDates.splice(o, 1),
                            t.removeClass(L).addClass(x);
                        }
                      } else if (
                        !0 === t.hasClass(O) &&
                        !1 === D.settings.pickWeeks
                      )
                        !0 === D.settings.multiple &&
                          (t.hasClass(j[0]) ? (a = 0) : j[1] && (a = 1)),
                          t.removeClass(O).removeClass(j[a]),
                          (k.current[a] = null);
                      else {
                        if (!0 === D.settings.pickWeeks)
                          if (!0 === t.hasClass(O) || !0 === t.hasClass(S)) {
                            for (var u = 0; u < 2; u++)
                              k.calendar
                                .find("." + O + "." + j[u])
                                .removeClass(O)
                                .removeClass(j[u]);
                            (k.current[0] = null), (k.current[1] = null);
                          } else {
                            (k.current[0] = T(n)
                              .startOf("week")
                              .add(D.settings.week, "days")),
                              (k.current[1] = T(n)
                                .endOf("week")
                                .add(D.settings.week, "days"));
                            for (var g = 0; g < 2; g++)
                              k.calendar
                                .find("." + O + "." + j[g])
                                .removeClass(O)
                                .removeClass(j[g]),
                                k.calendar
                                  .find(
                                    N.format(
                                      '.{0}[data-date="{1}"]',
                                      N.getSubClass("unit"),
                                      k.current[g].format("YYYY-MM-DD")
                                    )
                                  )
                                  .addClass(O)
                                  .addClass(j[g]);
                          }
                        else
                          !0 === D.settings.multiple &&
                            (null === k.current[0]
                              ? (a = 0)
                              : null === k.current[1]
                              ? (a = 1)
                              : ((a = 0),
                                (k.current[1] = null),
                                k.calendar
                                  .find("." + O + "." + j[1])
                                  .removeClass(O)
                                  .removeClass(j[1]))),
                            k.calendar
                              .find("." + O + "." + j[a])
                              .removeClass(O)
                              .removeClass(j[a]),
                            t.addClass(O).addClass(j[a]),
                            (k.current[a] = T(n));
                        if (k.current[0] && k.current[1]) {
                          if (0 < k.current[0].diff(k.current[1])) {
                            var c = k.current[0];
                            (k.current[0] = k.current[1]),
                              (k.current[1] = c),
                              (c = null),
                              k.calendar.find("." + O).each(function () {
                                var e = P(this);
                                for (var t in j) {
                                  var n = j[t];
                                  e.toggleClass(n);
                                }
                              });
                          }
                          if (
                            (!1 ===
                              (function (e, t) {
                                var n = void 0;
                                for (var a in D.settings.disabledDates)
                                  if (
                                    ((n = T(D.settings.disabledDates[a])),
                                    w(e, t, n))
                                  )
                                    return !1;
                                if (w(e, t, D.settings.maxDate)) return !1;
                                if (w(e, t, D.settings.minDate)) return !1;
                                for (var s in D.settings.disabledRanges) {
                                  var r = D.settings.disabledRanges[s],
                                    o = T(r[0]),
                                    i = T(r[1]);
                                  if (w(e, t, o) || w(e, t, i)) return !1;
                                }
                                var l = e.weekday(),
                                  u = t.weekday(),
                                  g = void 0;
                                u < l && ((g = l), (l = u), (u = g));
                                for (
                                  var c = 0, d = 0;
                                  c < D.settings.disabledWeekdays.length &&
                                  d < 7;
                                  c++
                                ) {
                                  d++;
                                  var f = D.settings.disabledWeekdays[c];
                                  if (l <= f && f <= u) return !1;
                                }
                                return !0;
                              })(k.current[0], k.current[1]) &&
                              !1 === D.settings.selectOver &&
                              ((k.current[0] = null),
                              (k.current[1] = null),
                              k.calendar
                                .find("." + O)
                                .removeClass(O)
                                .removeClass(j[0])
                                .removeClass(j[1])),
                            !0 === k.input && !1 === D.settings.buttons)
                          ) {
                            var d = [];
                            null !== k.current[0] &&
                              d.push(k.current[0].format(D.settings.format)),
                              null !== k.current[1] &&
                                d.push(k.current[1].format(D.settings.format)),
                              t.val(d.join(", ")),
                              C.trigger("apply." + N.getClass(q.name));
                          }
                        }
                      }
                      !0 === D.settings.multiple &&
                        (k.calendar
                          .find("." + S)
                          .removeClass(S)
                          .removeClass(Y)
                          .removeClass(A),
                        M.call()),
                        0 < D.settings.schedules.length &&
                          (k.storage.schedules = D.settings.schedules.filter(
                            function (e) {
                              return e.date === n;
                            }
                          ));
                    }
                    var f = function (e) {
                      k.date.all.push(e),
                        !(function (e) {
                          if (-1 !== D.settings.disabledDates.indexOf(e))
                            return !1;
                          if (0 <= e.diff(D.settings.maxDate)) return !1;
                          if (e.diff(D.settings.minDate) <= 0) return !1;
                          for (var t in D.settings.disabledRanges) {
                            var n = D.settings.disabledRanges[t],
                              a = T(n[0]),
                              s = T(n[1]);
                            if (w(a, s, e)) return !1;
                          }
                          var r = e.weekday();
                          return -1 === D.settings.disabledWeekdays.indexOf(r);
                        })(T(e))
                          ? k.date.disabled.push(e)
                          : k.date.enabled.push(e);
                    };
                    if (k.current[0])
                      if (k.current[1])
                        for (
                          var m = k.current[0].clone();
                          m.format("YYYY-MM-DD") <=
                          k.current[1].format("YYYY-MM-DD");
                          m.add("1", "days")
                        )
                          f(m.clone());
                      else f(k.current[0].clone());
                    !1 === s &&
                      ((k.initialize = null),
                      "function" == typeof D.settings.select &&
                        D.settings.select.call(t, k.current, k)),
                      "function" == typeof D.settings.click &&
                        D.settings.click.call(t, e, k);
                  });
                },
                u = k.dateManager.firstDay;
              u <= k.dateManager.lastDay;
              u++
            )
              l(u);
            for (var m = r + 1; g.length < 5 * D.settings.weeks.length; m++) {
              m < 0 && (m = F.languages.weeks.en.length - m);
              var p = P(
                N.format(
                  '<div class="{0} {0}-{1}"></div>',
                  N.getSubClass("unit"),
                  F.languages.weeks.en[
                    m % F.languages.weeks.en.length
                  ].toLowerCase()
                )
              );
              g.push(p);
            }
            for (var v = null, h = 0; h < g.length; h++) {
              var b = g[h];
              (h % D.settings.weeks.length == 0 || h + 1 >= g.length) &&
                (null !== v && v.appendTo(e),
                h + 1 < g.length &&
                  (v = P(
                    N.format('<div class="{0}"></div>', N.getSubClass("row"))
                  ))),
                v.append(b);
            }
            k.calendar.find("." + z.top + "-nav").bind("click", function (e) {
              e.preventDefault(), e.stopPropagation();
              var t = P(this),
                n = "unkown";
              t.hasClass(z.top + "-prev")
                ? ((n = "prev"),
                  (k.dateManager = new W(
                    k.dateManager.date.clone().add(-1, "months")
                  )))
                : t.hasClass(z.top + "-next") &&
                  ((n = "next"),
                  (k.dateManager = new W(
                    k.dateManager.date.clone().add(1, "months")
                  ))),
                "function" == typeof D.settings.page &&
                  D.settings.page.call(
                    t,
                    {
                      type: n,
                      year: k.dateManager.year,
                      month: k.dateManager.month,
                      day: k.dateManager.day,
                    },
                    k
                  ),
                "function" == typeof D.settings[n] &&
                  D.settings[n].call(
                    t,
                    {
                      type: n,
                      year: k.dateManager.year,
                      month: k.dateManager.month,
                      day: k.dateManager.day,
                    },
                    k
                  ),
                k.renderer.call();
            }),
              !0 === D.settings.multiple &&
                (k.calendar
                  .find("." + S)
                  .removeClass(S)
                  .removeClass(Y)
                  .removeClass(A),
                M.call());
          }),
            k.renderer.call(),
            (y[0][q.name] = k),
            "function" == typeof D.settings.init && D.settings.init.call(y, k);
        });
      };
    }
  ),
    u(
      "methods/setting",
      ["../component/global", "../configures/i18n", "jquery"],
      function (s, e, r) {
        return function (e) {
          var a = r.extend(
            { language: s.language, languages: {}, week: null, format: null },
            e
          );
          if (
            ((s.language = a.language), 0 < Object.keys(a.languages).length)
          ) {
            var t = function (t) {
              var n = a.languages[t];
              if (
                ("string" != typeof t &&
                  console.error(
                    "global configuration is failed.\nMessage: language key is not a string type.",
                    t
                  ),
                !n.weeks)
              )
                return (
                  console.warn(
                    "Warning: `weeks` option of `" +
                      t +
                      "` language is missing."
                  ),
                  "break"
                );
              if (!n.monthsLong)
                return (
                  console.warn(
                    "Warning: `monthsLong` option of `" +
                      t +
                      "` language is missing."
                  ),
                  "break"
                );
              if (!n.months)
                return (
                  console.warn(
                    "Warning: `months` option of `" +
                      t +
                      "` language is missing."
                  ),
                  "break"
                );
              if (!n.controls)
                return (
                  console.warn(
                    "Warning: `controls` option of `" +
                      t +
                      "` language is missing."
                  ),
                  "break"
                );
              if (n.weeks) {
                if (n.weeks.length < 7)
                  return (
                    console.error("`weeks` must have least 7 items."), "break"
                  );
                7 !== n.weeks.length &&
                  console.warn(
                    "`weeks` option over 7 items. We recommend to give 7 items."
                  );
              }
              if (n.monthsLong) {
                if (n.monthsLong.length < 12)
                  return (
                    console.error("`monthsLong` must have least 12 items."),
                    "break"
                  );
                12 !== n.monthsLong.length &&
                  console.warn(
                    "`monthsLong` option over 12 items. We recommend to give 12 items."
                  );
              }
              if (n.months) {
                if (n.months.length < 12)
                  return (
                    console.error("`months` must have least 12 items."), "break"
                  );
                12 !== n.months.length &&
                  console.warn(
                    "`months` option over 12 items. We recommend to give 12 items."
                  );
              }
              if (n.controls) {
                if (!n.controls.ok)
                  return (
                    console.error(
                      "`controls.ok` value is missing in your language setting"
                    ),
                    "break"
                  );
                if (!n.controls.cancel)
                  return (
                    console.error(
                      "`controls.cancel` value is missing in your language setting"
                    ),
                    "break"
                  );
              }
              -1 === s.languages.supports.indexOf(t) &&
                s.languages.supports.push(t),
                ["weeks", "monthsLong", "months", "controls"].map(function (e) {
                  s.languages[e][t] &&
                    console.warn(
                      "`" +
                        t +
                        "` language is already given however it will be overwriten."
                    ),
                    (s.languages[e][t] =
                      n[e] || s.languages[e][t.defaultLanguage]);
                });
            };
            for (var n in a.languages) {
              if ("break" === t(n)) break;
            }
          }
          a.week &&
            ("number" == typeof a.week
              ? (s.week = a.week)
              : console.error(
                  "global configuration is failed.\nMessage: You must give `week` option as number type."
                )),
            a.format &&
              ("string" == typeof a.format
                ? (s.format = a.format)
                : console.error(
                    "global configuration is failed.\nMessage: You must give `format` option as string type."
                  ));
        };
      }
    ),
    u("methods/select", ["../component/helper", "jquery"], function (a, s) {
      return function (n) {
        this.each(function () {
          var e = this.local.dateManager,
            t = a.format("{0}-{1}-{2}", e.year, e.month, n);
          s(this)
            .find(a.format('.{0}[data-date="{1}"]', a.getSubClass("unit"), t))
            .triggerHandler("click");
        });
      };
    }),
    u(
      "methods/set",
      ["jquery", "moment", "../manager/index", "../component/models"],
      function (r, o, i, l) {
        return function (e) {
          if (e) {
            var s = e.split("~").map(function (e) {
              var t = r.trim(e);
              return t || null;
            });
            this.each(function () {
              var e = r(this)[0][l.name],
                t = e.context,
                n = [
                  s[0] ? o(s[0], t.settings.format) : null,
                  s[1] ? o(s[1], t.settings.format) : null,
                ];
              if (
                ((e.dateManager = new i(n[0])),
                !0 === t.settings.pickWeeks && n[0])
              ) {
                var a = n[0];
                (n[0] = a.clone().startOf("week")),
                  (n[1] = a.clone().endOf("week"));
              }
              !0 === t.settings.toggle
                ? (e.storage.activeDates = s)
                : (e.current = n),
                e.renderer.call();
            });
          }
        };
      }
    ),
    u(
      "methods/index",
      ["./init", "./configure", "./setting", "./select", "./set"],
      function (e, t, n, a, s) {
        return { init: e, configure: t, setting: n, select: a, set: s };
      }
    ),
    u("component/polyfills", [], function () {
      Array.prototype.filter ||
        (Array.prototype.filter = function (e) {
          "use strict";
          if (null === this) throw new TypeError();
          var t = Object(this),
            n = t.length >>> 0;
          if ("function" != typeof e) return [];
          for (var a = [], s = arguments[1], r = 0; r < n; r++)
            if (r in t) {
              var o = t[r];
              e.call(s, o, r, t) && a.push(o);
            }
          return a;
        });
    }),
    u(
      "core",
      ["./methods/index", "./component/models", "./component/polyfills"],
      function (e, t) {
        "use strict";
        return (window[t.name] = { version: t.version }), e;
      }
    );
  H =
    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            "function" == typeof Symbol &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        };
  u("main", ["core", "component/models"], function (n, e) {
    "use strict";
    var t = function (e, t) {
      return void 0 !== n[t]
        ? n[t].apply(e, Array.prototype.slice.call(arguments, 2))
        : "object" !== (void 0 === t ? "undefined" : H(t)) && t
        ? void console.error("Argument error are occured.")
        : n.init.apply(e, Array.prototype.slice.call(arguments, 1));
    };
    for (var a in ((t.component = {}), e)) t.component[a] = e[a];
    return t;
  });
  var a = s("main"),
    r = s("component/models"),
    o = s("jquery"),
    i = window || {};
  for (var l in ((i.moment = s("moment")),
  (o.fn[r.name] = function (e) {
    return a.apply(
      a,
      [this, e].concat(Array.prototype.splice.call(arguments, 1))
    );
  }),
  r))
    o.fn[r.name][l] = r[l];
  u("plugins/jquery.js", function () {});
});
